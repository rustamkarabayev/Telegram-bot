from sqlite3 import connect
import sqlite3
import requests
import telebot
from telebot import types
from telebot.types import *
from telegram_bot_calendar import DetailedTelegramCalendar, LSTEP

bot = telebot.TeleBot('5777208709:AAGdFmSxGqiPVdHzAPvF6vy50XNak-v0P0M')

conn = connect("database.db", check_same_thread=False)
cursor = conn.cursor()

exit = KeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥")

categoryKB = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
smartphoneBtn = KeyboardButton(text="üì± Smartphone")
tabBtn = KeyboardButton(text="üñ•Tab")
watchBtn = KeyboardButton(text="‚åöÔ∏èWatch")
headphoneBtn = KeyboardButton(text="üéß Headphone")
macbookBtn = KeyboardButton(text="üíªMacbook")
currencyBtn = KeyboardButton(text="üí∞ –ö—É—Ä—Å –≤–∞–ª—é—Ç")
phoneBtn = KeyboardButton(text="üìû–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
site = types.InlineKeyboardButton("–ù–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Çüåê", url='https://www.apple.com/')
categoryKB.add(smartphoneBtn, tabBtn, watchBtn, headphoneBtn, macbookBtn, currencyBtn, phoneBtn, site)

smartphoneKB = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
iphone12 = KeyboardButton(text="Iphone 12")
iphone13 = KeyboardButton(text="Iphone 13")
iphone14 = KeyboardButton(text="Iphone 14")
smartphoneKB.add(iphone12, iphone13, iphone14, exit)

tabKB = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
ipadair = KeyboardButton(text="Ipad air")
ipadpro = KeyboardButton(text="Ipad pro")
ipad10 = KeyboardButton(text="Ipad 10th generation")
tabKB.add(ipadair, ipadpro, ipad10, exit)

watchKB = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
watchse = KeyboardButton(text="Watch SE")
watchseries8 = KeyboardButton(text="Watch series 8")
watchultra = KeyboardButton(text="Watch Ultra")
watchKB.add(watchse, watchseries8, watchultra, exit)

headphoneKB = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
airpodsmax = KeyboardButton(text="Airpods Max")
airpodspro = KeyboardButton(text="Airpods pro 2")
airpods3 = KeyboardButton(text="Airpods 3")
headphoneKB.add(airpodsmax, airpodspro, airpods3, exit)

macbookKB = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
macbookair = KeyboardButton(text="Macbook air")
macbookm1 = KeyboardButton(text="Macbook M1")
macbookm2 = KeyboardButton(text="Macbook M2")
macbookKB.add(macbookair, macbookm1, macbookm2, exit)

colorphoneKB = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
purple = KeyboardButton(text="üü£Purple")
white = KeyboardButton(text="‚ö™Ô∏èWhite")
black = KeyboardButton(text="‚ö´Ô∏èBlack")
colorphoneKB.add(purple, white, black, exit)

colortabKB = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
yellow = KeyboardButton(text="üü°Yellow")
blue = KeyboardButton(text="üîµBlue")
pink = KeyboardButton(text="üü£Pink")
colorphoneKB.add(yellow, blue, pink, exit)

colorwatchKB = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
red = KeyboardButton(text="üü•Red")
grey = KeyboardButton(text="‚¨õÔ∏èGrey")
colorphoneKB.add(red, grey, exit)

colorheadphoneKB = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
green = KeyboardButton(text="üü¢Green")
blackwhite = KeyboardButton(text="‚¨õÔ∏èBlack-white")
bluewhite = KeyboardButton(text="üí†Blue-white")
colorphoneKB.add(green, blackwhite, bluewhite, exit)

colormacbookKB = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
silver = KeyboardButton(text="Silver")
mint = KeyboardButton(text="Mint")
colormacbookKB.add(silver, mint, exit)

memoryphoneKB = ReplyKeyboardMarkup(row_width=4, resize_keyboard=True)
one128 = KeyboardButton(text="128 gb")
two256 = KeyboardButton(text="256 gb")
three512 = KeyboardButton(text="512 gb")
four1tb = KeyboardButton(text="1 TB")
memoryphoneKB.add(one128, two256, three512, four1tb, exit)

memorytabKB = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
one64 = KeyboardButton(text="64 gb")
two130 = KeyboardButton(text="130 gb")
memoryphoneKB.add(one64, two130, exit)

memorymacbookKB = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
one2tb = KeyboardButton(text="2 TB")
two4tb = KeyboardButton(text="4 TB")
memorymacbookKB.add(one2tb, two4tb, exit)


@bot.message_handler(commands=["start"])
def start(message):
    text = "ü§ñ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ iStore.\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –Ω–æ —Å–Ω–∞—á–∞–ª–∞ —Ö–æ—Ç–∏—Ç–µ –ª–∏ –≤—ã —á—Ç–æ–± –≤–∞—Å —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏?"
    bot.send_message(message.chat.id, text, reply_markup=categoryKB)

# @bot.message_handler(func=lambda a: True)
# def handler(message):
#     if message.text == "–î–∞":
#         bot.send_message(message.chat.id, "–í—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
#
#         cursor.execute('INSERT INTO iStore(user_id, name, surname, username) VALUES(?, ?, ?, ?)',
#                        (message.from_user.id,
#                         message.from_user.first_name,
#                         message.from_user.last_name,
#                         message.from_user.username))
#         conn.commit()
#     elif message.text == "all":
#         cursor.execute("SELECT * FROM iStore")
#         res = cursor.fetchall()
#
#         # for user in res:
#         #     bot.send_message(user[1], "Hello")
#         print(res)
#
#     elif message.text == "spam":
#         cursor.execute("SELECT * FROM iStore")
#         res = cursor.fetchall()
#
#         for user in res:
#             bot.send_message(user[1], "Spam!!!")


@bot.message_handler(commands=['calendar'])
def start(message):
    calendar, step = DetailedTelegramCalendar().build()
    bot.send_message(message.chat.id,
                     f"–í—ã–±–µ—Ä–∏—Ç–µ (–≥–æ–¥) {LSTEP[step]}",
                     reply_markup=calendar)


@bot.callback_query_handler(func=DetailedTelegramCalendar.func())
def call(c):
    result, key, step = DetailedTelegramCalendar().process(c.data)
    if not result and key:
        bot.edit_message_text(f"–í—ã–±–µ—Ä–∏—Ç–µ (–º–µ—Å—è—Ü) {LSTEP[step]}",
                              c.message.chat.id,
                              c.message.message_id,
                              reply_markup=key)
    elif result:
        bot.edit_message_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {result}",
                              c.message.chat.id,
                              c.message.message_id)


@bot.message_handler(commands=['products'])
def start_message(message):
    markup = telebot.types.InlineKeyboardMarkup()
    markup.add(telebot.types.InlineKeyboardButton(text="üì± Smartphone", callback_data=1))
    markup.add(telebot.types.InlineKeyboardButton(text="üñ•Tab", callback_data=2))
    markup.add(telebot.types.InlineKeyboardButton(text="üéß Headphone", callback_data=3))
    markup.add(telebot.types.InlineKeyboardButton(text="‚åöÔ∏èWatch", callback_data=4))
    markup.add(telebot.types.InlineKeyboardButton(text="üíªMacbook", callback_data=5))
    bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∏ —É–∑–Ω–∞–π—Ç–µ —á–µ–º –æ–Ω –ø–æ–ª–µ–∑–µ–Ω:",
                     reply_markup=markup)


@bot.message_handler(commands=['help'])
def help_message(message):
    markup = telebot.types.InlineKeyboardMarkup()
    markup.add(telebot.types.InlineKeyboardButton(text="–û –±–æ—Ç–µü§ñ", callback_data=6))
    markup.add(telebot.types.InlineKeyboardButton(text="–ù–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Çüåê", callback_data=7))
    markup.add(telebot.types.InlineKeyboardButton(text="–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞–ø—Ä–æ—Å–æ–≤üîÄ", callback_data=8))
    bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –∫–Ω–æ–ø–æ–∫ –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –Ω–∞—Å", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def query_handler(call):
    bot.answer_callback_query(callback_query_id=call.id, text='–°–ø–∞—Å–∏–±–æ —Ç–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å!')
    answer = ''
    if call.data == '1':
        answer = '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ –±–µ–∑ –Ω–µ–≥–æ –Ω–∏–∫–∞–∫üìÖ'
    elif call.data == '2':
        answer = '–û–Ω —É–¥–æ–±–µ–Ω –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∏–¥–µ–æ –∏ –ø–µ—Ä–µ–¥–∞—á‚ñ∂Ô∏è'
    elif call.data == '3':
        answer = '–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –º—É–∑—ã–∫–æ–π –≤ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä—É—Ç–∏–Ω—ãüîä'
    elif call.data == '4':
        answer = '–û–Ω–∏ –±—É–¥—É—Ç –≤–∞–º –∫–∞–∫ –Ω–µ–æ—Ç—ä–µ–º–ª–µ–º–∞—è —á–∞—Å—Ç—å –∂–∏–∑–Ω–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É–∫–µüïê'
    elif call.data == '5':
        answer = '–° –ø–æ–º–æ—â—å—é –Ω–µ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ —Ç–∞–∫–∂–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–≤–æ–∏ —Ä–∞–±–æ—Ç—ã –Ω–µ —Ç–æ–ª—å–∫–æ –≤ –æ—Ñ–∏—Å–µ –Ω–æ –∏ –¥–æ–º–∞üè¶'
    elif call.data == '6':
        answer = '–≠—Ç–æ—Ç –±–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –ø–æ–º–æ—â–Ω–∏–∫–æ–º –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –ª—é–±–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ Apple –æ—Ç –º–∞–≥–∞–∑–∏–Ω–∞ iStoreüçè, –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –∫–æ—Ç–æ—Ä–æ–≥–æ —è–≤–ª—è–µ—Ç—Å—è –ö–∞—Ä–∞–±–∞–µ–≤ –†—É—Å—Ç–∞–º.\n –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –∏ –æ–ø–ª–∞—á–∏–≤–∞—Ç—å –Ω–µ –≤—ã—Ö–æ–¥—è –∏–∑ –¥–æ–º–∞, —Ç–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —à–∞–ø–∫–µ –ø—Ä–æ—Ñ–∏–ª—è –±–æ—Ç–∞ –∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞‚ÑπÔ∏è'
    elif call.data == '7':
        answer = 'https://www.apple.com/'
    elif call.data == '8':
        answer = '/start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º\n/products - –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ü–∏–π –∏ –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ\n/calendar - –ö–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–≤–æ–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π\n/help - –ü–æ–º–æ—â—å –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
    bot.send_message(call.message.chat.id, answer)


@bot.message_handler(func=lambda message: True)
def main_handler(message):
    if message.text == "üì± Smartphone":
        p = open("smartphone(images)/images(main)/download.jpg", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "–†–∞–∑–¥–µ–ª –æ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞—Ö", reply_markup=smartphoneKB)

    elif message.text == "Iphone 12":
        p = open("smartphone(images)/images/iphone12.jpg", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Iphone 12 –≤—ã–±—Ä–∞–Ω\n–¶–µ–Ω–∞:750$", reply_markup=colorphoneKB)

    elif message.text == "Iphone 13":
        p = open("smartphone(images)/images/iphone13.jpg", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Iphone 13 –≤—ã–±—Ä–∞–Ω\n–¶–µ–Ω–∞:1100$", reply_markup=colorphoneKB)

    elif message.text == "Iphone 14":
        p = open("smartphone(images)/images/iphone14.webp", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Iphone 14 –≤—ã–±—Ä–∞–Ω\n–¶–µ–Ω–∞:1450$", reply_markup=colorphoneKB)

    elif message.text == "üü£Purple":
        p = open("smartphone(images)/images/iphone14.webp", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "–§–∏–æ–ª–µ—Ç–æ–≤—ã–π —Ü–≤–µ—Ç –≤—ã–±—Ä–∞–Ω", reply_markup=memoryphoneKB)

    elif message.text == "‚ö™Ô∏èWhite":
        p = open("smartphone(images)/colours/whiteiphone14.webp", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "–ë–µ–ª—ã–π —Ü–≤–µ—Ç –≤—ã–±—Ä–∞–Ω", reply_markup=memoryphoneKB)

    elif message.text == "‚ö´Ô∏èBlack":
        p = open("smartphone(images)/colours/blackiphone14.webp", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "–ß–µ—Ä–Ω—ã–π —Ü–≤–µ—Ç –≤—ã–±—Ä–∞–Ω", reply_markup=memoryphoneKB)

    elif message.text == "128 gb":
        bot.send_message(message.chat.id, "128 gb –≤—ã–±—Ä–∞–Ω", reply_markup=smartphoneKB)
    elif message.text == "256 gb":
        bot.send_message(message.chat.id, "256 gb –≤—ã–±—Ä–∞–Ω", reply_markup=smartphoneKB)
    elif message.text == "512 gb":
        bot.send_message(message.chat.id, "512 gb –≤—ã–±—Ä–∞–Ω", reply_markup=smartphoneKB)
    elif message.text == "1 TB":
        bot.send_message(message.chat.id, "1 TB –≤—ã–±—Ä–∞–Ω", reply_markup=smartphoneKB)


    elif message.text == "üñ•Tab":
        p = open("tab(images)/images(main)/download.jpg", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "–†–∞–∑–¥–µ–ª –æ –ø–ª–∞–Ω—à–µ—Ç–∞—Ö", reply_markup=tabKB)

    if message.text == "Ipad air":
        p = open("tab(images)/images/ipadair.png", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Ipad air –≤—ã–±—Ä–∞–Ω\n–¶–µ–Ω–∞:750$", reply_markup=colortabKB)

    elif message.text == "Ipad pro":
        p = open("tab(images)/images/ipadpro.png", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Ipad pro –≤—ã–±—Ä–∞–Ω\n–¶–µ–Ω–∞:1300$", reply_markup=colortabKB)

    elif message.text == "Ipad 10th generation":
        p = open("tab(images)/images/ipad10.png", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Ipad 10th generation –≤—ã–±—Ä–∞–Ω\n–¶–µ–Ω–∞:900$", reply_markup=colortabKB)
    if message.text == "üü°Yellow":
        p = open("tab(images)/colours/yellow.png", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "–ñ–µ–ª—Ç—ã–π —Ü–≤–µ—Ç –≤—ã–±—Ä–∞–Ω", reply_markup=memorytabKB)

    elif message.text == "üü£Pink":
        p = open("tab(images)/colours/pink.png", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "–†–æ–∑–æ–≤—ã–π —Ü–≤–µ—Ç –≤—ã–±—Ä–∞–Ω", reply_markup=memorytabKB)

    elif message.text == "üîµBlue":
        p = open("tab(images)/colours/blue.png", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "–°–∏–Ω–Ω–∏–π —Ü–≤–µ—Ç –≤—ã–±—Ä–∞–Ω", reply_markup=memorytabKB)

    if message.text == "64 gb":
        bot.send_message(message.chat.id, "64 gb –≤—ã–±—Ä–∞–Ω", reply_markup=tabKB)
    elif message.text == "130 gb":
        bot.send_message(message.chat.id, "130 gb –≤—ã–±—Ä–∞–Ω", reply_markup=tabKB)


    elif message.text == "‚åöÔ∏èWatch":
        p = open("watch(images)/images(main)/download.jpg", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "–†–∞–∑–¥–µ–ª –æ —á–∞—Å–∞—Ö", reply_markup=watchKB)

    if message.text == "Watch SE":
        p = open("watch(images)/images/watchse.webp", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Watch SE –≤—ã–±—Ä–∞–Ω\n–¶–µ–Ω–∞:250$", reply_markup=colorwatchKB)

    elif message.text == "Watch series 8":
        p = open("watch(images)/images/watchseries8.png", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Watch series 8 –≤—ã–±—Ä–∞–Ω—ã\n–¶–µ–Ω–∞:480$", reply_markup=colorwatchKB)

    elif message.text == "Watch series Ultra":
        p = open("watch(images)/images/watchultr.png", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Watch Ultra –≤—ã–±—Ä–∞–Ω\n–¶–µ–Ω–∞:1000$", reply_markup=colorwatchKB)

    if message.text == "üü•Red":
        p = open("watch(images)/images/watchultra.png", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "–ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –≤—ã–±—Ä–∞–Ω", reply_markup=watchKB)

    elif message.text == "‚¨õÔ∏èGrey":
        p = open("watch(images)/colours/watchgrey.png", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "–°–µ—Ä—ã–π —Ü–≤–µ—Ç –≤—ã–±—Ä–∞–Ω", reply_markup=watchKB)



    elif message.text == "üéß Headphone":
        p = open("headphones(images)/images(main)/images.jpg", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "–†–∞–∑–¥–µ–ª –æ –Ω–∞—É—à–Ω–∏–∫–∞—Ö", reply_markup=headphoneKB)

    if message.text == "Airpods Max":
        p = open("headphones(images)/images/airpodsmax.png", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Airpods Max –≤—ã–±—Ä–∞–Ω—ã\n–¶–µ–Ω–∞:800$", reply_markup=colorheadphoneKB)

    elif message.text == "Airpods pro 2":
        p = open("headphones(images)/images/airpodspro2.png", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Airpods pro 2 –≤—ã–±—Ä–∞–Ω—ã\n–¶–µ–Ω–∞:300$", reply_markup=colorheadphoneKB)

    elif message.text == "Airpods 3":
        p = open("headphones(images)/images/airpods3.webp", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Airpods 3 –≤—ã–±—Ä–∞–Ω—ã\n–¶–µ–Ω–∞:220$", reply_markup=colorheadphoneKB)

    if message.text == "üü¢Green":
        p = open("headphones(images)/colours/airpodsgreen.png", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "–ó–µ–ª–µ–Ω—ã–µ –≤—ã–±—Ä–∞–Ω—ã", reply_markup=categoryKB)

    elif message.text == "‚¨õÔ∏èBlack-white":
        p = open("headphones(images)/colours/airpodsblackwhite.png", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "–ß–µ—Ä–Ω–æ-–±–µ–ª—ã–µ –≤—ã–±—Ä–∞–Ω—ã", reply_markup=categoryKB)

    elif message.text == "üí†Blue-white":
        p = open("headphones(images)/colours/airpodsbluewhite.png", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "–°–∏–Ω–µ-–±–µ–ª—ã–π –≤—ã–±—Ä–∞–Ω—ã", reply_markup=categoryKB)


    elif message.text == "üíªMacbook":
        p = open("macbook(images)/images(main)/download.jpg", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "–†–∞–∑–¥–µ–ª –æ –Ω–æ—É—Ç–±—É–∫–∞—Ö", reply_markup=macbookKB)

    if message.text == "Macbook air":
        p = open("macbook(images)/images/macbookair.webp", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Macbook air –≤—ã–±—Ä–∞–Ω\n–¶–µ–Ω–∞:1200$", reply_markup=colormacbookKB)

    elif message.text == "Macbook M1":
        p = open("macbook(images)/colours/macbookgrey.webp", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Macbook M1 –≤—ã–±—Ä–∞–Ω\n–¶–µ–Ω–∞:2250$", reply_markup=colormacbookKB)

    elif message.text == "Macbook M2":
        p = open("macbook(images)/images/macbookm2.webp", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Macbook M2 –≤—ã–±—Ä–∞–Ω\n–¶–µ–Ω–∞:3850$", reply_markup=colormacbookKB)

    if message.text == "Silver":
        p = open("macbook(images)/colours/macbookgrey.webp", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Silver —Ü–≤–µ—Ç –≤—ã–±—Ä–∞–Ω", reply_markup=memorymacbookKB)

    elif message.text == "Mint":
        p = open("macbook(images)/colours/macbookmint.webp", 'rb')
        bot.send_photo(message.chat.id, p)
        bot.send_message(message.chat.id, "Mint —Ü–≤–µ—Ç –≤—ã–±—Ä–∞–Ω", reply_markup=memorymacbookKB)

    if message.text == "2 TB":
        bot.send_message(message.chat.id, "2 TB –≤—ã–±—Ä–∞–Ω", reply_markup=macbookKB)
    elif message.text == "4 TB":
        bot.send_message(message.chat.id, "4 TB –≤—ã–±—Ä–∞–Ω", reply_markup=macbookKB)
    elif message.text == "‚¨ÖÔ∏è–ù–∞–∑–∞–¥":
        bot.send_message(message.chat.id, "‚¨ÖÔ∏è–ú–µ–Ω—é", reply_markup=categoryKB)

    elif message.text == "–ù–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Çüåê":
        bot.send_message(message.chat.id, "https://www.apple.com/", reply_markup=categoryKB)

    elif message.text == "üí∞ –ö—É—Ä—Å –≤–∞–ª—é—Ç":
        data = requests.get('https://nbu.uz/uz/exchange-rates/json/').json()
        bot.send_message(message.chat.id, f'–ü–æ–∫—É–ø–∫–∞: {data[len(data) - 1]["nbu_buy_price"]}\n================\n' f'–ü—Ä–æ–¥–∞–∂–∞: {data[len(data) - 1]["nbu_cell_price"]}')


bot.infinity_polling()
